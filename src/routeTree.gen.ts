/* prettier-ignore-start */

/* eslint-disable */

// @ts-nocheck

// noinspection JSUnusedGlobalSymbols

// This file is auto-generated by TanStack Router

// Import Routes

import { Route as rootRoute } from './routes/__root'
import { Route as RegisterImport } from './routes/register'
import { Route as LoginImport } from './routes/login'
import { Route as AuthenticatedImport } from './routes/_authenticated'
import { Route as AuthenticatedIndexImport } from './routes/_authenticated/index'
import { Route as AuthenticatedTestImport } from './routes/_authenticated/test'
import { Route as AuthenticatedOutboundImport } from './routes/_authenticated/outbound'
import { Route as AuthenticatedItemsImport } from './routes/_authenticated/items'
import { Route as AuthenticatedInboundImport } from './routes/_authenticated/inbound'
import { Route as AuthenticatedDashboardImport } from './routes/_authenticated/dashboard'
import { Route as AuthenticatedCategoriesImport } from './routes/_authenticated/categories'
import { Route as AuthenticatedCashierImport } from './routes/_authenticated/cashier'

// Create/Update Routes

const RegisterRoute = RegisterImport.update({
  path: '/register',
  getParentRoute: () => rootRoute,
} as any)

const LoginRoute = LoginImport.update({
  path: '/login',
  getParentRoute: () => rootRoute,
} as any)

const AuthenticatedRoute = AuthenticatedImport.update({
  id: '/_authenticated',
  getParentRoute: () => rootRoute,
} as any)

const AuthenticatedIndexRoute = AuthenticatedIndexImport.update({
  path: '/',
  getParentRoute: () => AuthenticatedRoute,
} as any)

const AuthenticatedTestRoute = AuthenticatedTestImport.update({
  path: '/test',
  getParentRoute: () => AuthenticatedRoute,
} as any)

const AuthenticatedOutboundRoute = AuthenticatedOutboundImport.update({
  path: '/outbound',
  getParentRoute: () => AuthenticatedRoute,
} as any)

const AuthenticatedItemsRoute = AuthenticatedItemsImport.update({
  path: '/items',
  getParentRoute: () => AuthenticatedRoute,
} as any)

const AuthenticatedInboundRoute = AuthenticatedInboundImport.update({
  path: '/inbound',
  getParentRoute: () => AuthenticatedRoute,
} as any)

const AuthenticatedDashboardRoute = AuthenticatedDashboardImport.update({
  path: '/dashboard',
  getParentRoute: () => AuthenticatedRoute,
} as any)

const AuthenticatedCategoriesRoute = AuthenticatedCategoriesImport.update({
  path: '/categories',
  getParentRoute: () => AuthenticatedRoute,
} as any)

const AuthenticatedCashierRoute = AuthenticatedCashierImport.update({
  path: '/cashier',
  getParentRoute: () => AuthenticatedRoute,
} as any)

// Populate the FileRoutesByPath interface

declare module '@tanstack/react-router' {
  interface FileRoutesByPath {
    '/_authenticated': {
      id: '/_authenticated'
      path: ''
      fullPath: ''
      preLoaderRoute: typeof AuthenticatedImport
      parentRoute: typeof rootRoute
    }
    '/login': {
      id: '/login'
      path: '/login'
      fullPath: '/login'
      preLoaderRoute: typeof LoginImport
      parentRoute: typeof rootRoute
    }
    '/register': {
      id: '/register'
      path: '/register'
      fullPath: '/register'
      preLoaderRoute: typeof RegisterImport
      parentRoute: typeof rootRoute
    }
    '/_authenticated/cashier': {
      id: '/_authenticated/cashier'
      path: '/cashier'
      fullPath: '/cashier'
      preLoaderRoute: typeof AuthenticatedCashierImport
      parentRoute: typeof AuthenticatedImport
    }
    '/_authenticated/categories': {
      id: '/_authenticated/categories'
      path: '/categories'
      fullPath: '/categories'
      preLoaderRoute: typeof AuthenticatedCategoriesImport
      parentRoute: typeof AuthenticatedImport
    }
    '/_authenticated/dashboard': {
      id: '/_authenticated/dashboard'
      path: '/dashboard'
      fullPath: '/dashboard'
      preLoaderRoute: typeof AuthenticatedDashboardImport
      parentRoute: typeof AuthenticatedImport
    }
    '/_authenticated/inbound': {
      id: '/_authenticated/inbound'
      path: '/inbound'
      fullPath: '/inbound'
      preLoaderRoute: typeof AuthenticatedInboundImport
      parentRoute: typeof AuthenticatedImport
    }
    '/_authenticated/items': {
      id: '/_authenticated/items'
      path: '/items'
      fullPath: '/items'
      preLoaderRoute: typeof AuthenticatedItemsImport
      parentRoute: typeof AuthenticatedImport
    }
    '/_authenticated/outbound': {
      id: '/_authenticated/outbound'
      path: '/outbound'
      fullPath: '/outbound'
      preLoaderRoute: typeof AuthenticatedOutboundImport
      parentRoute: typeof AuthenticatedImport
    }
    '/_authenticated/test': {
      id: '/_authenticated/test'
      path: '/test'
      fullPath: '/test'
      preLoaderRoute: typeof AuthenticatedTestImport
      parentRoute: typeof AuthenticatedImport
    }
    '/_authenticated/': {
      id: '/_authenticated/'
      path: '/'
      fullPath: '/'
      preLoaderRoute: typeof AuthenticatedIndexImport
      parentRoute: typeof AuthenticatedImport
    }
  }
}

// Create and export the route tree

export const routeTree = rootRoute.addChildren({
  AuthenticatedRoute: AuthenticatedRoute.addChildren({
    AuthenticatedCashierRoute,
    AuthenticatedCategoriesRoute,
    AuthenticatedDashboardRoute,
    AuthenticatedInboundRoute,
    AuthenticatedItemsRoute,
    AuthenticatedOutboundRoute,
    AuthenticatedTestRoute,
    AuthenticatedIndexRoute,
  }),
  LoginRoute,
  RegisterRoute,
})

/* prettier-ignore-end */

/* ROUTE_MANIFEST_START
{
  "routes": {
    "__root__": {
      "filePath": "__root.tsx",
      "children": [
        "/_authenticated",
        "/login",
        "/register"
      ]
    },
    "/_authenticated": {
      "filePath": "_authenticated.tsx",
      "children": [
        "/_authenticated/cashier",
        "/_authenticated/categories",
        "/_authenticated/dashboard",
        "/_authenticated/inbound",
        "/_authenticated/items",
        "/_authenticated/outbound",
        "/_authenticated/test",
        "/_authenticated/"
      ]
    },
    "/login": {
      "filePath": "login.tsx"
    },
    "/register": {
      "filePath": "register.tsx"
    },
    "/_authenticated/cashier": {
      "filePath": "_authenticated/cashier.tsx",
      "parent": "/_authenticated"
    },
    "/_authenticated/categories": {
      "filePath": "_authenticated/categories.tsx",
      "parent": "/_authenticated"
    },
    "/_authenticated/dashboard": {
      "filePath": "_authenticated/dashboard.tsx",
      "parent": "/_authenticated"
    },
    "/_authenticated/inbound": {
      "filePath": "_authenticated/inbound.tsx",
      "parent": "/_authenticated"
    },
    "/_authenticated/items": {
      "filePath": "_authenticated/items.tsx",
      "parent": "/_authenticated"
    },
    "/_authenticated/outbound": {
      "filePath": "_authenticated/outbound.tsx",
      "parent": "/_authenticated"
    },
    "/_authenticated/test": {
      "filePath": "_authenticated/test.tsx",
      "parent": "/_authenticated"
    },
    "/_authenticated/": {
      "filePath": "_authenticated/index.tsx",
      "parent": "/_authenticated"
    }
  }
}
ROUTE_MANIFEST_END */
